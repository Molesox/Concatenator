name: Release (Windows / macOS / Linux)

permissions:
  contents: write # Nécessaire pour créer des releases et uploader des assets

on:
  push:
    tags:
      - "v*"


jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            os_name: windows
            ext: .exe
            archive: zip
          - os: macos-latest
            os_name: macos
            ext: .app
            archive: zip
          - os: ubuntu-latest
            os_name: linux
            ext: ""          # binaire sans extension
            archive: tar.gz

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # --- Build (commandes adaptées selon OS) ---
      - name: Build (Windows)
        if: matrix.os_name == 'windows'
        run: |
          pyinstaller --noconfirm --onefile --windowed --name Concatenator ^
            --add-data "icons;icons" ^
            main.py
          dir dist
      - name: Build (macOS)
        if: matrix.os_name == 'macos'
        run: |
          pyinstaller --noconfirm --onefile --windowed --name Concatenator \
            --add-data "icons:icons" \
            main.py
          ls -la dist
      - name: Build (Linux)
        if: matrix.os_name == 'linux'
        run: |
          pyinstaller --noconfirm --onefile --windowed --name Concatenator \
            --add-data "icons:icons" \
            main.py
          ls -la dist

      # --- Emballage par OS ---
      - name: Package artifact (Windows → zip)
        if: matrix.os_name == 'windows'
        shell: pwsh
        run: |
          $tag = "${{ github.ref_name }}"
          $zipName = "Concatenator-$tag-windows.zip"
          Compress-Archive -Path "dist/Concatenator.exe" -DestinationPath $zipName
          Get-FileHash $zipName | Format-List
          # Copie aussi l'exe brut pour les power-users
          Copy-Item "dist/Concatenator.exe" "Concatenator-$tag-windows.exe"

      - name: Package artifact (macOS → zip .app)
        if: matrix.os_name == 'macos'
        run: |
          TAG="${{ github.ref_name }}"
          ZIP="Concatenator-${TAG}-macos.zip"
          cd dist && zip -r "../${ZIP}" "Concatenator.app"
          cd ..
          shasum -a 256 "${ZIP}" || true

      - name: Package artifact (Linux → tar.gz)
        if: matrix.os_name == 'linux'
        run: |
          TAG="${{ github.ref_name }}"
          BIN="dist/Concatenator"
          TAR="Concatenator-${TAG}-linux.tar.gz"
          tar -czf "${TAR}" -C dist Concatenator
          sha256sum "${TAR}" || true
          # Copie aussi le binaire brut
          cp "${BIN}" "Concatenator-${TAG}-linux"

      # --- Upload artifacts (pour l'étape Release) ---
      - name: Upload packaged files
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ matrix.os_name }}
          path: |
            Concatenator-${{ github.ref_name }}-windows.zip
            Concatenator-${{ github.ref_name }}-windows.exe
            Concatenator-${{ github.ref_name }}-macos.zip
            Concatenator-${{ github.ref_name }}-linux.tar.gz
            Concatenator-${{ github.ref_name }}-linux
          if-no-files-found: ignore

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List artifacts
        run: |
          echo "Files to release:"
          find artifacts -type f -maxdepth 2 -print

      - name: Create Release & Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/Concatenator-*-windows.zip
            artifacts/**/Concatenator-*-windows.exe
            artifacts/**/Concatenator-*-macos.zip
            artifacts/**/Concatenator-*-linux.tar.gz
            artifacts/**/Concatenator-*-linux
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
